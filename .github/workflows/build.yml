name: Build

on:
  push:
    branches:
      - main
      - development
  workflow_dispatch:

permissions:
     id-token: write 
     contents: read 


jobs:
  build:
    runs-on: ubuntu-latest
    
    outputs:
      ARTIFACT_NAME: ${{ steps.set-output.outputs.ARTIFACT_NAME }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test

    - name: Build project
      run: npm run build
      
    - name: Generate unique artifact name
      id: set-output
      run: echo "ARTIFACT_NAME=build-artifact-${{ github.run_number }}.zip" >> $GITHUB_OUTPUT
      
    - name: Zip project
      run: zip -r ${{ steps.set-output.outputs.ARTIFACT_NAME }} .

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: ${{ steps.set-output.outputs.ARTIFACT_NAME }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    
    environment:
      name: ${{ github.ref == 'refs/heads/master' && 'production' || 'development' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
       name: build-artifacts
       path: ./build-artifacts


    - name: Authenticate to GCP
      id: auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: 'projects/588006826849/locations/global/workloadIdentityPools/git-pool/providers/github'
        service_account: 'github-act-svc@awesome-pilot-439007-s9.iam.gserviceaccount.com'
        audience: 'g-actions'

      
    # - name: Artifact upload to Google storage bucket
    #   uses: google-github-actions/upload-cloud-storage@v1
    #   with:
    #     path: ./build-artifacts/${{ needs.build.outputs.ARTIFACT_NAME }}
    #     destination: 'node-artifact'
       
    # - name: Deploy to GCP
    #   env:
    #     GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
    #     GCP_FUNCTION_NAME: ${{ vars.GCP_FUNCTION_NAME }}
    #     GCP_REGION: ${{ vars.GCP_REGION }}
    #   run: |
    #     echo $HOME
    #     pwd
        
    #     #gcloud auth login --cred-file=FILEPATH.json
    #     #gcloud config set project $GCP_PROJECT_ID
    #     #gcloud auth login --impersonate-service-account='github-act-svc@awesome-pilot-439007-s9.iam.gserviceaccount.com'

    #     #gcloud functions deploy nodefunction22 --runtime nodejs16 --trigger-http --allow-unauthenticated --region us-east1 --source .
    #     gcloud functions deploy 'nodefunction22' \
    #     --runtime nodejs16 \
    #     --trigger-http \
    #     --allow-unauthenticated \
    #     --region 'us-east1' \
    #     --source .
    #     # gcloud functions add-iam-policy-binding $GCP_FUNCTION_NAME \
    #     # --region $GCP_REGION \
    #     # --member="allUsers" \
    #     # --role="roles/cloudfunctions.invoker"

    - name: Deploy to GCP function1
      uses: google-github-actions/deploy-cloud-functions@v3
      with:
        project_id: 'awesome-pilot-439007-s9'
        name: 'nodefunction33'
        region: us-east1
        runtime: nodejs20
        source_dir: ./function1/
